import { useState } from "react";
import { Link } from "react-router-dom";
import { ArrowLeft, BookOpen, Send, AlertCircle } from "lucide-react";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import { useToast } from "@/hooks/use-toast";
import { MariscaLogo } from "@/components/MariscaLogo";
import { Footer } from "@/components/Footer";
import { SEO } from "@/components/SEO";
import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from "@/components/ui/form";
import { complaintSchema, type ComplaintFormData } from "@/lib/validations";
import { supabase } from "@/integrations/supabase/client";
import { useAuth } from "@/hooks/use-auth";

const ComplaintsBook = () => {
  const { toast } = useToast();
  const { user } = useAuth();
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [complaintNumber, setComplaintNumber] = useState<string | null>(null);

  const form = useForm<ComplaintFormData>({
    resolver: zodResolver(complaintSchema),
    defaultValues: {
      name: "",
      email: user?.email || "",
      phone: "",
      complaintType: "produto",
      description: "",
      orderId: "",
    },
  });

  const onSubmit = async (data: ComplaintFormData) => {
    setIsSubmitting(true);

    try {
      const { data: complaint, error } = await supabase
        .from("complaints")
        .insert({
          user_id: user?.id || null,
          name: data.name,
          email: data.email,
          phone: data.phone || null,
          complaint_type: data.complaintType,
          description: data.description,
          order_id: data.orderId || null,
          complaint_number: "", // Will be auto-generated by trigger
        })
        .select("complaint_number")
        .single();

      if (error) throw error;

      setComplaintNumber(complaint.complaint_number);
      
      toast({
        title: "Reclamação registada!",
        description: `Número da reclamação: ${complaint.complaint_number}`,
      });

      form.reset();
    } catch (error) {
      console.error("Error submitting complaint:", error);
      toast({
        title: "Erro ao registar reclamação",
        description: "Por favor tente novamente mais tarde.",
        variant: "destructive",
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <>
      <SEO 
        title="Livro de Reclamações - Marisca"
        description="Livro de Reclamações Online da Marisca. Exerça o seu direito de reclamação de forma simples e rápida."
        canonical="https://marisca.pt/livro-reclamacoes"
      />
      
      <div className="min-h-screen bg-background flex flex-col">
        {/* Header */}
        <header className="sticky top-0 z-50 bg-background/80 backdrop-blur-md border-b">
          <div className="container mx-auto px-4 py-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-4">
                <Link to="/">
                  <Button variant="ghost" size="icon">
                    <ArrowLeft className="h-5 w-5" />
                  </Button>
                </Link>
                <MariscaLogo className="h-8" />
              </div>
              <h1 className="text-lg font-semibold">Livro de Reclamações</h1>
            </div>
          </div>
        </header>

        <main className="flex-1 container mx-auto px-4 py-12 max-w-4xl">
          {/* Hero Section */}
          <div className="text-center mb-8">
            <div className="flex justify-center mb-6">
              <BookOpen className="h-16 w-16 text-primary" />
            </div>
            <h1 className="text-4xl font-bold mb-4 text-primary">Livro de Reclamações Online</h1>
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
              O direito de reclamação está garantido por lei. Utilize este formulário para registar a sua reclamação de forma oficial.
            </p>
          </div>

          {/* Info Alert */}
          <Alert className="mb-8">
            <AlertCircle className="h-4 w-4" />
            <AlertTitle>Informação Importante</AlertTitle>
            <AlertDescription>
              Esta reclamação será registada e enviada às entidades competentes (ASAE). Receberá um número de reclamação que deve guardar como comprovativo.
            </AlertDescription>
          </Alert>

          {/* Success Message */}
          {complaintNumber && (
            <Alert className="mb-8 bg-green-50 border-green-200">
              <AlertCircle className="h-4 w-4 text-green-600" />
              <AlertTitle className="text-green-800">Reclamação Registada</AlertTitle>
              <AlertDescription className="text-green-700">
                A sua reclamação foi registada com o número: <strong>{complaintNumber}</strong>
                <br />
                Guarde este número para referência futura.
              </AlertDescription>
            </Alert>
          )}

          {/* Form */}
          <Card>
            <CardHeader>
              <CardTitle>Formulário de Reclamação</CardTitle>
              <CardDescription>
                Preencha todos os campos obrigatórios. Os seus dados serão tratados de forma confidencial.
              </CardDescription>
            </CardHeader>
            <CardContent>
              <Form {...form}>
                <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <FormField
                      control={form.control}
                      name="name"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Nome Completo *</FormLabel>
                          <FormControl>
                            <Input placeholder="O seu nome completo" {...field} />
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />

                    <FormField
                      control={form.control}
                      name="email"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Email *</FormLabel>
                          <FormControl>
                            <Input type="email" placeholder="o.seu.email@exemplo.com" {...field} />
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <FormField
                      control={form.control}
                      name="phone"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Telefone</FormLabel>
                          <FormControl>
                            <Input type="tel" placeholder="+351 000 000 000" {...field} />
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />

                    <FormField
                      control={form.control}
                      name="complaintType"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Tipo de Reclamação *</FormLabel>
                          <Select onValueChange={field.onChange} defaultValue={field.value}>
                            <FormControl>
                              <SelectTrigger>
                                <SelectValue placeholder="Selecione o tipo" />
                              </SelectTrigger>
                            </FormControl>
                            <SelectContent>
                              <SelectItem value="produto">Produto</SelectItem>
                              <SelectItem value="entrega">Entrega</SelectItem>
                              <SelectItem value="atendimento">Atendimento</SelectItem>
                              <SelectItem value="outro">Outro</SelectItem>
                            </SelectContent>
                          </Select>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                  </div>

                  <FormField
                    control={form.control}
                    name="orderId"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel>Número da Encomenda (opcional)</FormLabel>
                        <FormControl>
                          <Input placeholder="ID da encomenda relacionada" {...field} />
                        </FormControl>
                        <FormMessage />
                      </FormItem>
                    )}
                  />

                  <FormField
                    control={form.control}
                    name="description"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel>Descrição da Reclamação *</FormLabel>
                        <FormControl>
                          <Textarea 
                            placeholder="Descreva a sua reclamação de forma detalhada..."
                            rows={8}
                            {...field}
                          />
                        </FormControl>
                        <FormMessage />
                      </FormItem>
                    )}
                  />

                  <Button 
                    type="submit" 
                    className="w-full" 
                    size="lg"
                    disabled={isSubmitting}
                  >
                    {isSubmitting ? (
                      <div className="flex items-center gap-2">
                        <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-current"></div>
                        A registar...
                      </div>
                    ) : (
                      <div className="flex items-center gap-2">
                        <Send className="h-4 w-4" />
                        Registar Reclamação
                      </div>
                    )}
                  </Button>
                </form>
              </Form>
            </CardContent>
          </Card>

          {/* Legal Info */}
          <Card className="mt-8">
            <CardContent className="pt-6">
              <h3 className="font-semibold text-lg mb-4">Informação Legal</h3>
              <div className="space-y-3 text-sm text-muted-foreground">
                <p>
                  <strong>ASAE:</strong> Autoridade de Segurança Alimentar e Económica
                </p>
                <p>
                  <strong>Website:</strong> www.asae.gov.pt
                </p>
                <p>
                  <strong>Telefone:</strong> 217 983 600
                </p>
                <p>
                  As reclamações são registadas e enviadas às entidades competentes no prazo legal de 10 dias úteis.
                </p>
              </div>
            </CardContent>
          </Card>
        </main>

        <Footer />
      </div>
    </>
  );
};

export default ComplaintsBook;
